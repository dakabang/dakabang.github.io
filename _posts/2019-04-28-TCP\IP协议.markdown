## 基本概念
TCP/IP协议是一个网络通信模型，以及一整个网络传输协议家族，也是网络通信的基础框架，IP层也就是我们熟悉的网络层，主要负责将网络包通过网络从A送到B，IP协议是不可靠的协议，可能会因为网络问题丢包，因此一个可靠的传输协议会在IP层上面再加一层传输协议，定义了一系列的重传等等机制来保证传输的可靠性，TCP则是这样一个可靠的传输协议，是点对点的基于链接的流协议。下面主要介绍如何用c api变成实现TCP和IP的组包。

## IPV4
首先我们了解一下IPV4报文的包头结构
```
0                                         15                                    31
+------------|--------------|-------------|--------------------------------------|
| 版本号(4位) | 头部长度(4位) | 服务类型(8位) |          总长度(16位)                |
+-----------------------------------------|--------------------------------------+
|              标识(16位)                  | 标志(3位) |        位偏移(13位)       |
+-----------------------------------------|--------------------------------------|
|    生存时间TTL(8位) | 协议(8位)           |         头部校验和(16位)              |
+-----------------------------------------|--------------------------------------+
|                                源IP地址(32位)                                   |
+-----------------------------------------|--------------------------------------+
|                                目的IP地址(32位)                                 |
+--------------------------------------------------------------------------------+
|                               选项(最多40字节)                                  |
+--------------------------------------------------------------------------------+
```

这里需要注意的几个点是
1. 一个是头部长度，IPV4的头部结构长度是20字节，若含有可变长的选项部分，最多60字节
2. 总长度，指整个IP数据包的长度，单位为字节，IP数据包的最大长度是65535字节（2的16次方）。由于MTU的限制，长度超过MTU的数据包都将被分片传输，所以实际传输的IP分片数据包的长度远远没有达到最大值
3. 标识，唯一的标志主机发送的每一个数据包，初始值是随机的，每发送一个数据包其值加1。同一个数据报的所有分片都具有相同的标识。
4. 标志, 位1保留，位2标识禁止分片(DF)，如果设置了这个位置，IP模块将不对数据包进行分片，在此情况下若IP数据包超过MTU，IP模块将丢弃数据报并返回一个ICMP差错报文，位3标识更多分片，除了数据包的最后一个分片，其他分片都要把它设置为1。
5. 位偏移，分片相对原始IP数据包数据部分的偏移，实际的偏移值为该值左移3位后得到，所以除了最后一个IP数据包分片外，每个IP分片的数据部分的长度都必须是8的整数倍。


## TCP
首先我们了解一下TCP报文的包头结构
```
0                                         15                                    31
+-----------------------------------------|--------------------------------------|
|              源端口号(16位)              |          目的端口号(16位)              |
+-----------------------------------------|--------------------------------------+
|                                   序号(32位)                                    |
+-----------------------------------------|--------------------------------------|
|                                   确认号(32位)                                  |
+-----------------------------------------|--------------------------------------+
|     头部长度(4位)   |  保留位(6位)        |         窗口大小(16位)                |
+-----------------------------------------|--------------------------------------+
|                校验和(16位)              |         紧急指针(16位)                |
+--------------------------------------------------------------------------------+
|                               选项(最多40字节)                                  |
+--------------------------------------------------------------------------------+
```

1. 序号: 一次TCP通信过程中某一个传输方向上的字节流的每个字节的编号，通过这个来确认发送的数据有序，比如现在序列号为1000，发送了1000个字节，下一个序列号就是2000。
2. 确认号：用来响应TCP报文段，给收到的TCP报文段的序号加1，三握时还要携带自己的序号。
3. 头部长度：标识该TCP头部有多少个4字节，共表示最长15*4=60字节, 同IP头部。